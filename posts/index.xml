<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - inchan.dev</title>
        <link>https://inchan.dev/posts/</link>
        <description>All Posts | inchan.dev</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>song@inchan.dev (inchan)</managingEditor>
            <webMaster>song@inchan.dev (inchan)</webMaster><lastBuildDate>Sun, 18 Feb 2024 13:35:51 &#43;0900</lastBuildDate><atom:link href="https://inchan.dev/posts/" rel="self" type="application/rss+xml" /><item>
    <title>AWS public IP 요금 부과에 따른 대처 및 EC2를 이용한 RDS 외부 연결하기</title>
    <link>https://inchan.dev/posts/202403051335/</link>
    <pubDate>Sun, 18 Feb 2024 13:35:51 &#43;0900</pubDate>
    <author>inchan</author>
    <guid>https://inchan.dev/posts/202403051335/</guid>
    <description><![CDATA[작년 말 즈음 AWS로부터 한통의 메일을 받았고, 그 내용은 AWS에서의 모든 public IP에 대한 요금을 부과 하겠다는 것이었다.
공지 – AWS Public IPv4 주소 요금 변경 및 Public IP Insights 기능 출시 | Amazon Web Services 한국 블로그
AWS에서 퍼블릭(Public) IPv4 주소에 대한 새로운 요금이 도입됩니다. 2024년 2월 1일부터 서비스 연결 여부에 관계없이 모든 퍼블릭 IPv4 주소에 대해 시간당 IP당 0.005 USD의 요금이 부과됩니다. 계정에 할당했지만 EC2 인스턴스에 연결하지 않은 퍼블릭 IPv4 주소에 대해서는 이미 요금이 부과되고 있습니다.]]></description>
</item>
<item>
    <title>AWS EC2 서버에 HTTPS 적용하기(2) - Cloudflare 이용 방법</title>
    <link>https://inchan.dev/posts/202403051214/</link>
    <pubDate>Sun, 18 Feb 2024 12:14:30 &#43;0900</pubDate>
    <author>inchan</author>
    <guid>https://inchan.dev/posts/202403051214/</guid>
    <description><![CDATA[관련 글
AWS EC2 서버에 HTTPS 적용하기(1) - Route53과 로드밸런서 이용 AWS EC2에 HTTPS를 연결하는 방법은 몇가지가 있는데
그 중 하나는 Route53을 이용하는 것이고,
다른 하나는 도메인 서비스의 프록시 서비스를 통해 바로 연결하는 방법이다.
전자의 경우 위 관련 글의 링크에서 참고할 수 있으며 이 글은 후자에 관한 글이다.
참고로 현재 이 방법이 가장 간단하고 편하며 경제적이다.1
우선 EC2 인스턴스에는 public IPv4 주소를 하나 부여할 수 있다.
이는 인스턴스 생성시 설정에서 &lsquo;자동으로 부여하기&rsquo;를 통해 부여할 수도 있고, 따로이 탄력적 IP를 하나 생성하여 부여할 수도 있다.]]></description>
</item>
<item>
    <title>typeORM 시간대 설정에 관한 고찰 - typeORM의 dateStrings와 timezone 옵션에 따른 시간대 혼란</title>
    <link>https://inchan.dev/posts/202403010802/</link>
    <pubDate>Mon, 05 Feb 2024 08:22:58 &#43;0900</pubDate>
    <author>inchan</author>
    <guid>https://inchan.dev/posts/202403010802/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1525562929550-63ef340cfe1d?q=80&amp;w=2748&amp;auto=format&amp;fit=crop&amp;ixlib=rb-4.0.3&amp;ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D" referrerpolicy="no-referrer">
            </div>먼저 알아두기 mySQL - Date 필드의 타입 종류 mySQL에서 Date 필드의 타입 종류는 다음과 같다.
DATE - 날짜만 TIME - 시간만 DATETIME - 시간대가 반영되지 않은 현재 서버 시간대의 날짜와 시간 데이터 TIMESTAMP - 시간대가 반영된 날짜와 시간 데이터 여기서 주의할 점은 TIMESTAMP 이다.
이 데이터는 해당 서버의 시간대를 반영하기에 DB에 저장될 때에는 UTC(+00:00) 시간대로 변환되어 저장된다.
단, 조회시 세션 설정에 따른 시간대를 반영하여 해당 시간대로 변환된 데이터로 조회된다.]]></description>
</item>
<item>
    <title>프로젝트별 각각의 node 버전을 nvm으로 자동 적용하기</title>
    <link>https://inchan.dev/posts/202401311413/</link>
    <pubDate>Wed, 31 Jan 2024 14:13:39 &#43;0900</pubDate>
    <author>inchan</author>
    <guid>https://inchan.dev/posts/202401311413/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://upload.wikimedia.org/wikipedia/commons/thumb/d/d9/Node.js_logo.svg/2880px-Node.js_logo.svg.png" referrerpolicy="no-referrer">
            </div>source : nvm-sh/nvm: Node Version Manager - POSIX-compliant bash script to manage multiple active node.js versions 새로운 프로젝트는 Node 버전 중 현재 최신 LTS 버전인 20 버전으로 진행하려는데, 기존 진행중인 프로젝트가 AWS-ec2에서 node@16으로 세팅되어있던 터라, macOS에서 2개 버전을 설치해 사용해야하는 상황이 왔다.1
때문에 여러 node 버전을 사용할 수 있는 nvm(Node version Manager)을 설치
설치는 brew를 통해 설치했고 이후 과정은 brew에서 자세하게 설명해준다.
장점 OS에 하나 이상의, 여러 version별 node를 설치하고 프로젝트별로 각각 다른 버전의 node를 사용할 수 있다.]]></description>
</item>
<item>
    <title>Node.js에서 OOP 기반 리포지토리에 적용한 싱글톤 디자인패턴</title>
    <link>https://inchan.dev/posts/202401261149/</link>
    <pubDate>Fri, 26 Jan 2024 11:49:52 &#43;0900</pubDate>
    <author>inchan</author>
    <guid>https://inchan.dev/posts/202401261149/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1642624466789-9e0649ba4e31?q=80&amp;w=2832&amp;auto=format&amp;fit=crop&amp;ixlib=rb-4.0.3&amp;ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D" referrerpolicy="no-referrer">
            </div>&lt;표지 사진출처: Unsplash)&gt; Project Tech Stack Overview Language: TypeScript
Platform: Node.js
Web Framework: Express.js
Database: MySQL
ORM: TypeORM
Cloud Storage: AWS S3
Development Tool: WebStorm
Version Control and Issue Tracking: GitHub Issue
얼마 전, 모든 코드를 OOP로 리팩토링한 뒤, 한 문제를 발견했다.
리포지토리 역시 클래스 기반으로 내보내고 있었는데 때문에 각각의 서비스 로직에서는 이를 new Class() 형태로 불러오면서 단일 인스턴스가 아닌 여러 인스턴스의 생성 위험이 있었다.
OOP 리팩토링 전, 함수기반에서는 최초 호출된 datasource 인스턴스 하나를 계속해서 사용하기에 문제가 없었는데 이 부분을 간과했다.]]></description>
</item>
<item>
    <title>Node.js와 TypeORM에서 겪은 트랜잭션 롤백 문제 - 원인 분석과 해결 방법</title>
    <link>https://inchan.dev/posts/202401241017/</link>
    <pubDate>Wed, 24 Jan 2024 10:19:14 &#43;0900</pubDate>
    <author>inchan</author>
    <guid>https://inchan.dev/posts/202401241017/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1488229297570-58520851e868?q=80&amp;w=2938&amp;auto=format&amp;fit=crop&amp;ixlib=rb-4.0.3&amp;ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D" referrerpolicy="no-referrer">
            </div>&lt;표지 사진출처: Unsplash&gt;
Project Tech Stack Overview Language: TypeScript
Platform: Node.js
Web Framework: Express.js
Database: MySQL
ORM: TypeORM
Cloud Storage: AWS S3
Server: AWS EC2
Development Tool: WebStorm
Collaboration Tool: Slack
Version Control and Issue Tracking: GitHub Issue
문제 상황 프로젝트에서 발견된 주요 문제는 TypeORM을 사용하는 Node.js 환경에서 트랜잭션 관리와 롤백이 제대로 이루어지지 않는 것이었다. 이는 게시글을 등록하는 로직에서 발견되었으며, 예기치 않은 오류가 발생했을 경우 데이터베이스에 불필요한 데이터가 잔존하는 결과를 초래했다.]]></description>
</item>
<item>
    <title>Github Pages에 Cloudflare 도메인 연결 중 리다이렉션 실패가 난다면</title>
    <link>https://inchan.dev/posts/202401122324/</link>
    <pubDate>Fri, 12 Jan 2024 23:24:58 &#43;0900</pubDate>
    <author>inchan</author>
    <guid>https://inchan.dev/posts/202401122324/</guid>
    <description><![CDATA[문제상황 구글이 도메인 사업을 매각한 후, 도메인 이전을 차일피일 미루다 최근에서야 Cloudflare로 도메인을 이전하였다.1
모든 DNS 역시 정상적으로 이전하였고, 메일서비스를 비롯한 다른 서비스들도 정상작동함을 확인하였다.
그런데 갑자기 해당 도메인의 주소가 정상적으로 작동하지 않는 문제가 생겼다.
브라우저에서 20회 이상의 리다이렉션으로 페이지 불러오기 실패
해결방법 Cloudflare side menu - SSL/TLS - 개요 : SSL/TLS 암호화 모드를
가변에서 전체로 변경했더니 문제 해결!
그런데 왜?? 현재 다른 설정은 항상 HTTPS 사용이 체크되어있는데 이 설정과 충돌해서일까?]]></description>
</item>
<item>
    <title>AWS EC2 서버에 HTTPS 적용하기(1) - Route53과 로드밸런서 이용</title>
    <link>https://inchan.dev/posts/202401122216/</link>
    <pubDate>Wed, 10 Jan 2024 22:17:59 &#43;0900</pubDate>
    <author>inchan</author>
    <guid>https://inchan.dev/posts/202401122216/</guid>
    <description><![CDATA[관련 글
AWS EC2 서버에 HTTPS 적용하기(2) - Cloudflare 이용 방법 팀 프로젝트로 백엔드 서버를 EC2에서 배포하여 사용중인데 여기에 HTTPS를 적용하여 보았다.
적용방법은 몇가지가 있지만 크게 AWS의 Route53을 이용하는 방법과 도메인서비스의 프록싱을 이용한 방법 등이 있다.
그 중 첫번째 방법에 대해 기술한다.
겁먹지 말기 AWS내에서 각 서비스를 이리저리 다니며
무언가를 자꾸 생성하고 또 세팅하다보니 자칫 어렵다고 지레 겁먹기 쉬운데
실제로 해보면 생각보다 간단하고 쉽다. 구글링을 하다보면 여러 관련 글이 있는데 아래 참고한 2개의 웹페이지가 가장 잘 설명되어있다.]]></description>
</item>
<item>
    <title>error log - jest.spyOn()에서 재사용함수에 대한 모의 불가</title>
    <link>https://inchan.dev/posts/202306291258/</link>
    <pubDate>Thu, 29 Jun 2023 12:58:27 &#43;0900</pubDate>
    <author>inchan</author>
    <guid>https://inchan.dev/posts/202306291258/</guid>
    <description><![CDATA[사용환경 : Node.Js, Express
언어 : typeScript
테스트 프레임워크 : Jest
상황 Abstract 같은 파일 (모듈) 내에 있는 함수의 재사용시,
테스트 코드를 작성하는데 모의하기가 상당히 까다롭고 불편함.
특히 테스트 코드가 지나치게 지저분해짐 user.service.ts 파일 내부 다음은 user.service.ts 파일의 내부 코드 요약이다.
초점을 맞춰 볼 곳은,
updateUserInfo 함수 내부에서 checkDuplicateEmail 함수와 checkDuplicateNickname 함수가 재사용되고 있다.
// ... const checkDuplicateEmail = async ( email: string ) =&gt; { ... } const checkDuplicateNickname = async ( nickname: string ) =&gt; { .]]></description>
</item>
<item>
    <title>Webina 참여 회고 - 원티드 주최 &#39;ChatGPT 시대에 구성원의 역량을 어떻게 육성할 것인가?&#39;</title>
    <link>https://inchan.dev/posts/202306211131/</link>
    <pubDate>Wed, 21 Jun 2023 11:31:43 &#43;0900</pubDate>
    <author>inchan</author>
    <guid>https://inchan.dev/posts/202306211131/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1679083216051-aa510a1a2c0e?ixlib=rb-4.0.3&amp;ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&amp;auto=format&amp;fit=crop&amp;w=2664&amp;q=80" referrerpolicy="no-referrer">
            </div>&lt;표지 사진출처: Unsplash&gt; 지난 월요일 저녁 &ldquo;ChatGPT 시대에 구성원의 역량을 어떻게 육성할 것인가?&rdquo; 라는 아주 흥미로운 주제의 웨비나가 있어 참여하였다. 비단 HR 관계자가 아니더라도 각 팀의 리더 또는 구성원이라면, 또는 조직에 속해있다면, 그리고 발빠르게 변화하는 현시대적 흐름에서 자기 스스로를 육성하는 방면에서도 몹시 듣고 싶은 주제였다.
현재 Chat GPT를 필두로 한 AI가 대다수의 업계에 미치는 파급효과는 어마어마하다.
OpenAI로 인한 영향, 방법 등에 관한 콘텐츠가 마구잡이로 쏟아져나오고 있는 현재이다.
이러한 시대적 상황에서 OpenAI가 조금이라도 나의 업무에 미치는 영향이 있다면 이번 웨비나는 쉽게 지나치기 힘든 주제였다.]]></description>
</item>
</channel>
</rss>
