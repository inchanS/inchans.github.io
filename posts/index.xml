<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - inchan.dev</title>
        <link>https://inchan.dev/posts/</link>
        <description>All Posts | inchan.dev</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>song@inchan.dev (inchan)</managingEditor>
            <webMaster>song@inchan.dev (inchan)</webMaster><lastBuildDate>Fri, 17 Mar 2023 00:17:31 &#43;0900</lastBuildDate><atom:link href="https://inchan.dev/posts/" rel="self" type="application/rss+xml" /><item>
    <title>error note - AWS EC2의 SSH 접속이 안될 때</title>
    <link>https://inchan.dev/posts/202303170023/</link>
    <pubDate>Fri, 17 Mar 2023 00:17:31 &#43;0900</pubDate>
    <author>inchan</author>
    <guid>https://inchan.dev/posts/202303170023/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1633078654544-61b3455b9161?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTF8fGVycm9yfGVufDB8fDB8fA%3D%3D&amp;auto=format&amp;fit=crop&amp;w=900&amp;q=60&amp;h=300" referrerpolicy="no-referrer">
            </div>1
Bug 갑자기 macOS terminal에서 AWS EC2에 ssh접속이 안된다.
접속해보면 즉각적인 반응이 아닌, 오랜 시간 후 다음과 같은 메세지를 뱉었다.
$ ssh -i my_key.pem ec2-user@11.111.11.111 ssh: connect to host 11.111.11.111 port 22: Operation timed out Operation timed out 이라니&hellip;
찾아보니 여러 이유가 있을 수 있었다.
보안규칙에 22포트에 대한 설정이 누락되었거나, 명령어가 잘못 입력되었거나, 방화벽 설정에서 막혔다거나&hellip; 대개 구글링했을때 나오는건 Connetion timed out 이었는데 이건 너무 포괄적인 답변들이라 난감했다.
여튼 현재상황에서, 설정은 잘못된게 없었고 다른 ssh(github)로 테스트 해보니 모두 정상이었다.]]></description>
</item>
<item>
    <title>error note - EC2에서 PM2 실행시 NODE_ENV 설정 명령어</title>
    <link>https://inchan.dev/posts/202303162353/</link>
    <pubDate>Thu, 16 Mar 2023 23:56:16 &#43;0900</pubDate>
    <author>inchan</author>
    <guid>https://inchan.dev/posts/202303162353/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1599153066743-08810dc8a419?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8YXdzfGVufDB8fDB8fA%3D%3D&amp;auto=format&amp;fit=crop&amp;w=900&amp;q=60&amp;h=300" referrerpolicy="no-referrer">
            </div>1
AWS EC2에 배포를 하려하는데, 조그만 문제가 하나 생겼다.
아래 예시와 같이 .env파일을 개발, 배포 등의 목적으로 각각 나누어 코드를 작성했는데,
main.ts 파일 코드 예시 if (process.env.NODE_ENV === &#39;production&#39;) { dotenv.config({ path: path.join(__dirname, &#39;/../env/.env.production&#39;) }); } else if (process.env.NODE_ENV === &#39;develop&#39;) { dotenv.config({ path: path.join(__dirname, &#39;/../env/.env.dev&#39;) }); console.log(&#39;process.env.NODE_ENV is &#39;, process.env.NODE_ENV); } else if (process.env.NODE_ENV === &#39;test&#39;) { dotenv.config({ path: path.join(__dirname, &#39;/../env/.env.test&#39;) }); } else { throw new Error(&#39;process.env.NODE_ENV IS_NOT_SET!!&#39;); } 이걸 EC2에서 pm2로 프로세스를 돌릴 때 어떻게 명령을 내려야 하는가 였다.]]></description>
</item>
<item>
    <title>Swagger를 이용한 백엔드의 효과적인 API명세 전달</title>
    <link>https://inchan.dev/posts/202303080503/</link>
    <pubDate>Wed, 08 Mar 2023 05:14:43 &#43;0900</pubDate>
    <author>inchan</author>
    <guid>https://inchan.dev/posts/202303080503/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1516321497487-e288fb19713f?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&amp;auto=format&amp;fit=crop&amp;w=2670&amp;q=80" referrerpolicy="no-referrer">
            </div>사진출처: unsplash
백엔드가 효과적인 명세 전달 고민 Failure 그동안 진행했던 프로젝트에서 제대로 된 API 명세를 적시에 프론트측에 전달하지 못했고,
때문에 최종 출시를 앞두고 서로간의 코드 오류를 잡느라 시간적 비용이 꽤나 낭비됐다. 간단하게는 Request Body 값의 TYPE과 관련된 소통 혼선으로 겪었던 헤프닝도 더러 있었다. 어떻게 하면 좋을까? 우선은 백엔드의 입장에서 생각해본다.
명세는 코드가 만들어지면서 늘 수정될 수 있다. 때문에 명세는 코드와 함께 작업되어야 하고, API 테스트를 위해 즉각적으로 수정되어야 한다. 같은 백엔드 팀의 경우에는 직접 코드를 보기에 명세의 부족함을 보완할 수는 있다.]]></description>
</item>
<item>
    <title>블로깅 플랫폼 변경: Google Blogger에서 GitHub &#43; Hugo로</title>
    <link>https://inchan.dev/posts/202303022327/</link>
    <pubDate>Mon, 06 Mar 2023 01:35:56 &#43;0900</pubDate>
    <author>inchan</author>
    <guid>https://inchan.dev/posts/202303022327/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1647166545674-ce28ce93bdca?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTV8fGdpdGh1YnxlbnwwfHwwfHw%3D&amp;auto=format&amp;fit=crop&amp;w=900&amp;q=60&amp;h=300" referrerpolicy="no-referrer">
            </div>&lt; 이미지 출처 = unsplash &gt;
github + hugo로 이사! 이전: google blogger 이전에 사용했던 블로그의 플랫폼은 google blogger였다.
tistory나 naver 블로그에 비해 내가 원하는 문법의 허용범위가 더 커서 오랫동안 사용중이었다.
(예를 들면 toc, 각주, MarkDown 문법과 HTML 문법으로의 글 작성 모두 지원 등…)
기술 블로그에서 하나의 문서 양이 스크롤을 필요로 한다면 특히나 필요한 것이,
바로 TOC(table of contents) 라고 생각한다.
h태그를 이용한 toc의 가장 큰 장점은
전체적인 개요를 한 눈에 살펴볼 수 있고, 또한 해당 태그 부분만의 링크를 가질 수 있다는 점!]]></description>
</item>
<item>
    <title>typeORM transaction에서 repository 사용하기</title>
    <link>https://inchan.dev/posts/202302250414/</link>
    <pubDate>Sat, 25 Feb 2023 04:14:31 &#43;0900</pubDate>
    <author>inchan</author>
    <guid>https://inchan.dev/posts/202302250414/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1555421689-491a97ff2040?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTV8fHRyYW5zYWN0aW9ufGVufDB8fDB8fA%3D%3D&amp;auto=format&amp;fit=crop&amp;w=900&amp;q=60&amp;h=300" referrerpolicy="no-referrer">
            </div>&lt;사진: unsplash&gt;
transaction 구성중 Entity가 아닌 Repository 사용시 typeORM에서 transaction을 사용하는 방법은 몇가지가 있지만,
복잡한 service단의 처리에서는 아래의 queryRunner 방식이 더 적합할것 같아서
dataSource.createQueryRunner() 방식을 사용했다.1
// transaction으로 묶어주기 const queryRunner = dataSource.createQueryRunner(); await queryRunner.connect(); await queryRunner.startTransaction(); try { // feed 저장 let newTempFeed: Feed = plainToInstance(FeedDto, feedInfo); const tempFeed = await FeedRepository.createFeed(newTempFeed); //&lt;- 문제!! // ... 추가 코드들 } catch (err) { await queryRunner.rollbackTransaction(); throw new Error(`createTempFeed TRANSACTION error: ${err}`); } finally { await queryRunner.]]></description>
</item>
<item>
    <title>Node.js 백엔드TypeScript &#43; typeORM으로 무한 대댓글 가공하기</title>
    <link>https://inchan.dev/posts/202302160417/</link>
    <pubDate>Thu, 16 Feb 2023 04:17:07 &#43;0900</pubDate>
    <author>inchan</author>
    <guid>https://inchan.dev/posts/202302160417/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1672308627194-9a2c28daa17a?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxzZWFyY2h8NXx8dHlwZXNjcmlwdHxlbnwwfHwwfHw%3D&amp;auto=format&amp;fit=crop&amp;w=900&amp;q=60&amp;h=300" referrerpolicy="no-referrer">
            </div>&lt;사진: unsplash&gt;
#project_review
기능 구현 목표 댓글, 대댓글&hellip; 대댓글 등의 무한대댓글 구조 typeORM의 Entity를 연계한 createQueryBuilder 등을 지향하며, 최대한 직접적인 QueryRunner 방식 지양 삭제 및 비공개 댓글 가림 json 출력시 불필요한 요소 제거 (특히 Date 타입에서 !! ) 가장 오랜시간을 지연시켰던 Blocker typeORM createQueryBuilder 메소드로 출력시
2023-02-14T08:55:24.090Z // ^ ^^^^ &lt;- 거추장스럽다. 이런 식으로 나오는 문제가 있는데 꽤나 씨름했다.
우선 Entity의 Date type은 datetime이 아닌 timestamp로 했다.
mySQL에서의 출력은 DB가 설치된 서버의 시간대를 따르기에]]></description>
</item>
<item>
    <title>chatGPT 사용기 - whereClauseBuilder 함수를 물어보았다.</title>
    <link>https://inchan.dev/posts/202302100411/</link>
    <pubDate>Fri, 10 Feb 2023 04:11:51 &#43;0900</pubDate>
    <author>inchan</author>
    <guid>https://inchan.dev/posts/202302100411/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1675557009483-e6cf3867976b?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxzZWFyY2h8NXx8Y2hhdGdwdHxlbnwwfHwwfHw%3D&amp;auto=format&amp;fit=crop&amp;w=900&amp;q=60&amp;h=300" referrerpolicy="no-referrer">
            </div>#chatGPT
chatGPT에게 whereClauseBuilder 함수를 물어보았다. 원하는 정보는 javascript에서 mySQL DB로 query문을 작성하여 사용시, 반복되는 where절에 대해 함수화하여 재사용할 수 있는 방법 또는 예시 코드였다.
질문은 한글로 했고, 영어로 답변이 오는데 속도는 꽤 빠르다.
하지만 답변을 한글로 받고자 하면 꽤 오랜 지연이 발생한다.
whereClauseBuilder함수란? I&rsquo;m sorry, but you haven&rsquo;t provided enough context for me to understand what you&rsquo;re asking about. Could you please provide more information or specify what you&rsquo;re looking to learn about &ldquo;whereClauseBuilder&rdquo;?]]></description>
</item>
<item>
    <title>devonthink에서 markdown으로 웹클리핑시 이미지 주소 문제</title>
    <link>https://inchan.dev/posts/202302020410/</link>
    <pubDate>Thu, 02 Feb 2023 04:10:40 &#43;0900</pubDate>
    <author>inchan</author>
    <guid>https://inchan.dev/posts/202302020410/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://www.devontechnologies.com/media/pages/apps/devonthink/2706592775-1612970307/packshot-devonthink-light.png" referrerpolicy="no-referrer">
            </div>&lt;사진: DEVONtechnologies | DEVONthink, professional document and information management for the Mac and iOS&gt;
tag : #devonthink source : Script: Replace link references with real links in Markdwon - DEVONthink / Tips - DEVONtechnologies Community
코딩을 공부하면서 정말 많은 웹 문서들을 참고하며 정리하게 된다.
그 중, 보관하고자 하는 문서는 주로 웹클리핑을 통해 정보를 수집한다.
이때, 클리핑 포맷은 보통 PDF로 하지만 가끔 code block내 스크롤이 있는 경우에는
PDF에서 짤린채로 수집되는 문제가 있어 MarkDown 포맷으로 클리핑을 한다.]]></description>
</item>
<item>
    <title>WebStorm - console.log(변수) 자동완성 라이브 템플릿 만들기</title>
    <link>https://inchan.dev/posts/202302020409/</link>
    <pubDate>Thu, 02 Feb 2023 04:09:55 &#43;0900</pubDate>
    <author>inchan</author>
    <guid>https://inchan.dev/posts/202302020409/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1639507986194-48ef61205b61?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxzZWFyY2h8MXx8amV0YnJhaW5zfGVufDB8fDB8fA%3D%3D&amp;auto=format&amp;fit=crop&amp;w=900&amp;q=60&amp;h=300" referrerpolicy="no-referrer">
            </div>&lt;사진: unsplash&gt;
tag : #webstorm
source : Live template variables | WebStorm Documentation
JavaScript로 코딩을 하다보면 적잖이 console.log()를 사용하게 된다.
보통 나는 간단하게 현재 흐름상 위치를 잡거나 객체를 확인할 때 자주 쓰는데,
많은 글자는 아니지만 그래도 같은걸 계속해서 타이핑하는게 귀찮아서 만들었다.
축약어는 console.log의 앞글자를 따서 cl로 단축 명령어를 만들었고,
cl 단축어 입력 후 tab을 누르면 해당 WebStorm의 live template이 실행된다.
간단하게 다음과 같은 역할을 수행된다.
console.log()를 입력 괄호 안에 변수명을 타이핑할 수 있도록 커서 위치 이동 변수명을 쓰면 따옴표 안에 동일한 변수가 들어가도록 설정 즉 console.]]></description>
</item>
<item>
    <title>typescript - any와 unknown의 차이</title>
    <link>https://inchan.dev/posts/202301280423/</link>
    <pubDate>Sat, 28 Jan 2023 04:23:52 &#43;0900</pubDate>
    <author>inchan</author>
    <guid>https://inchan.dev/posts/202301280423/</guid>
    <description><![CDATA[tag : #typescript related link
unknown-typescript typescript로 코딩을 하다가 어떤 타입인지 정의 내리기 힘든 상황에서 주로 any 를 사용한다.
물론 typescript의 성격상 any는 지양하는 것이 좋다.
오류를 검증하고 확인하려는 특성으로 엄격한 타입을 지정하려는 typescript에서 어떤 타입이나 가능하다는 성격의 any는 어쩌면 존재 자체가 모순인 타입이기도 하다.
하지만코딩을 하다보면 아직은 타입을 정하기 전인 상황이거나, 도저히 타입을 알 수 없거나 추론할 수 없을 때, (또는 typescript 초급자일 때 ;;) 가끔 사용하게 되는 것이 또 any 타입이다.]]></description>
</item>
</channel>
</rss>
