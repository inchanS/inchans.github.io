<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>AWS - Tag - inchan.dev</title>
        <link>https://inchan.dev/tags/aws/</link>
        <description>AWS - Tag - inchan.dev</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>song@inchan.dev (inchan)</managingEditor>
            <webMaster>song@inchan.dev (inchan)</webMaster><lastBuildDate>Sun, 18 Feb 2024 13:35:51 &#43;0900</lastBuildDate><atom:link href="https://inchan.dev/tags/aws/" rel="self" type="application/rss+xml" /><item>
    <title>AWS public IP 요금 부과에 따른 대처 및 EC2를 이용한 RDS 외부 연결하기</title>
    <link>https://inchan.dev/posts/202403051335/</link>
    <pubDate>Sun, 18 Feb 2024 13:35:51 &#43;0900</pubDate>
    <author>inchan</author>
    <guid>https://inchan.dev/posts/202403051335/</guid>
    <description><![CDATA[작년 말 즈음 AWS로부터 한통의 메일을 받았고, 그 내용은 AWS에서의 모든 public IP에 대한 요금을 부과 하겠다는 것이었다.
공지 – AWS Public IPv4 주소 요금 변경 및 Public IP Insights 기능 출시 | Amazon Web Services 한국 블로그
AWS에서 퍼블릭(Public) IPv4 주소에 대한 새로운 요금이 도입됩니다. 2024년 2월 1일부터 서비스 연결 여부에 관계없이 모든 퍼블릭 IPv4 주소에 대해 시간당 IP당 0.005 USD의 요금이 부과됩니다. 계정에 할당했지만 EC2 인스턴스에 연결하지 않은 퍼블릭 IPv4 주소에 대해서는 이미 요금이 부과되고 있습니다.]]></description>
</item>
<item>
    <title>AWS EC2 서버에 HTTPS 적용하기(2) - Cloudflare 이용 방법</title>
    <link>https://inchan.dev/posts/202403051214/</link>
    <pubDate>Sun, 18 Feb 2024 12:14:30 &#43;0900</pubDate>
    <author>inchan</author>
    <guid>https://inchan.dev/posts/202403051214/</guid>
    <description><![CDATA[관련 글
AWS EC2 서버에 HTTPS 적용하기(1) - Route53과 로드밸런서 이용 AWS EC2에 HTTPS를 연결하는 방법은 몇가지가 있는데
그 중 하나는 Route53을 이용하는 것이고,
다른 하나는 도메인 서비스의 프록싱을 통해 바로 연결하는 방법이다.
전자의 경우 위 관련 글의 링크에서 참고할 수 있으며 이 글은 후자에 관한 글이다.
우선 EC2 인스턴스에는 public IPv4 주소를 하나 부여할 수 있다.
이는 인스턴스 생성시 설정에서 &lsquo;자동으로 부여하기&rsquo;를 통해 부여할 수도 있고, 따로이 탄력적 IP를 하나 생성하여 부여할 수도 있다.]]></description>
</item>
<item>
    <title>AWS EC2 서버에 HTTPS 적용하기(1) - Route53과 로드밸런서 이용</title>
    <link>https://inchan.dev/posts/202401122216/</link>
    <pubDate>Wed, 10 Jan 2024 22:17:59 &#43;0900</pubDate>
    <author>inchan</author>
    <guid>https://inchan.dev/posts/202401122216/</guid>
    <description><![CDATA[관련 글
AWS EC2 서버에 HTTPS 적용하기(2) - Cloudflare 이용 방법 팀 프로젝트로 백엔드 서버를 EC2에서 배포하여 사용중인데 여기에 HTTPS를 적용하여 보았다.
적용방법은 몇가지가 있지만 크게 AWS의 Route53을 이용하는 방법과 도메인서비스의 프록싱을 이용한 방법 등이 있다.
그 중 첫번째 방법에 대해 기술한다.
겁먹지 말기 AWS내에서 각 서비스를 이리저리 다니며
무언가를 자꾸 생성하고 또 세팅하다보니 자칫 어렵다고 지레 겁먹기 쉬운데
실제로 해보면 생각보다 간단하고 쉽다. 구글링을 하다보면 여러 관련 글이 있는데 아래 참고한 2개의 웹페이지가 가장 잘 설명되어있다.]]></description>
</item>
<item>
    <title>AWS EC2에서 product 서버와 개발용 서버 같이 사용하기</title>
    <link>https://inchan.dev/posts/202306191659/</link>
    <pubDate>Mon, 19 Jun 2023 16:59:51 &#43;0900</pubDate>
    <author>inchan</author>
    <guid>https://inchan.dev/posts/202306191659/</guid>
    <description><![CDATA[프로젝트를 진행하다보면 필연적으로 프론트엔드와의 통신교류가 필요하고,
이 때마다 local server로 열기보단 상시 열려있는 server가 있는 것이 훨씬 편하다.
때문에 이러한 개발과정상 필요한 back-end의 통신교류용 API 서버를 AWS EC2에서 간편하게 열어 사용하는 방법에 대해 기술하려 한다.
초기 처음 통신교류를 위한 서버는 VScode의 Live Share Extension을 이용하였다.
방법은 다음과 같다.
extensions에서 Live Share 설치 좌측 사이드 메뉴에서 Live Share 아이콘 클릭 Share 버튼을 클릭하면 실시간 공유가 시작된다. 여기서 Shared Servers를 클릭하고 상단 검색창에 포트 번호를 입력후, enter를 누르면 해당 포트로 서버가 공유된다.]]></description>
</item>
<item>
    <title>AWS RDS 데이터 - 다른 계정으로 이전하기</title>
    <link>https://inchan.dev/posts/202306191507/</link>
    <pubDate>Mon, 19 Jun 2023 15:07:40 &#43;0900</pubDate>
    <author>inchan</author>
    <guid>https://inchan.dev/posts/202306191507/</guid>
    <description><![CDATA[서로 다른 AWS의 계정간 RDS의 데이터를 이전하는 방법에 대해 소개한다.
AWS RDS 계정간 이동 우선 간략히 설명하자면 순서는 다음과 같다.
Info 구 계정에서 스냅샷 생성 생성이 완전히 완료되면 스냅샷 공유 탭이 활성화된다. 스냅샷 공유에서 private 선택후, 계정란에 이전할 새로운 계정의 ID 입력 이전할 새 계정으로 로그인 후, RDS에서 좌측 사이드바의 스냅샷 메뉴 - 상단 나와 공유된 스냅샷 탭 클릭 마이그레이션 선택! (RDS 세팅시 프리티어라고 따로 설정하는 안내가 없으니 잘 보고 세팅) 끝!]]></description>
</item>
<item>
    <title>error log - AWS EC2의 SSH 접속이 안될 때</title>
    <link>https://inchan.dev/posts/202303170023/</link>
    <pubDate>Fri, 17 Mar 2023 00:17:31 &#43;0900</pubDate>
    <author>inchan</author>
    <guid>https://inchan.dev/posts/202303170023/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1633078654544-61b3455b9161?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTF8fGVycm9yfGVufDB8fDB8fA%3D%3D&amp;auto=format&amp;fit=crop&amp;w=900&amp;q=60&amp;h=300" referrerpolicy="no-referrer">
            </div>1
Bug 갑자기 macOS terminal에서 AWS EC2에 ssh접속이 안된다. 접속해보면 즉각적인 반응이 아닌, 오랜 시간 후 다음과 같은 메세지를 뱉었다.
$ ssh -i my_key.pem ec2-user@11.111.11.111 ssh: connect to host 11.111.11.111 port 22: Operation timed out Operation timed out 이라니&hellip;
찾아보니 여러 이유가 있을 수 있었다.
보안규칙에 22포트에 대한 설정이 누락되었거나, 명령어가 잘못 입력되었거나, 방화벽 설정에서 막혔다거나&hellip; 대개 구글링했을때 나오는건 Connetion timed out 이었는데 이건 너무 포괄적인 답변들이라 난감했다.
여튼 현재상황에서, 설정은 잘못된게 없었고 다른 ssh(github)로 테스트 해보니 모두 정상이었다.]]></description>
</item>
<item>
    <title>error log - EC2에서 PM2 실행시 NODE_ENV 설정 명령어</title>
    <link>https://inchan.dev/posts/202303162353/</link>
    <pubDate>Thu, 16 Mar 2023 23:56:16 &#43;0900</pubDate>
    <author>inchan</author>
    <guid>https://inchan.dev/posts/202303162353/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="https://images.unsplash.com/photo-1599153066743-08810dc8a419?ixlib=rb-4.0.3&amp;ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8YXdzfGVufDB8fDB8fA%3D%3D&amp;auto=format&amp;fit=crop&amp;w=900&amp;q=60&amp;h=300" referrerpolicy="no-referrer">
            </div>1
AWS EC2에 배포를 하려하는데, 조그만 문제가 하나 생겼다.
아래 예시와 같이 .env파일을 개발, 배포 등의 목적으로 각각 나누어 코드를 작성했는데,
main.ts 파일 코드 예시 if (process.env.NODE_ENV === &#39;production&#39;) { dotenv.config({ path: path.join(__dirname, &#39;/../env/.env.production&#39;) }); } else if (process.env.NODE_ENV === &#39;develop&#39;) { dotenv.config({ path: path.join(__dirname, &#39;/../env/.env.dev&#39;) }); console.log(&#39;process.env.NODE_ENV is &#39;, process.env.NODE_ENV); } else if (process.env.NODE_ENV === &#39;test&#39;) { dotenv.config({ path: path.join(__dirname, &#39;/../env/.env.test&#39;) }); } else { throw new Error(&#39;process.env.NODE_ENV IS_NOT_SET!!&#39;); } 이걸 EC2에서 pm2로 프로세스를 돌릴 때 어떻게 명령을 내려야 하는가 였다.]]></description>
</item>
<item>
    <title>AWS 퍼블릭 IP와 탄력적 IP</title>
    <link>https://inchan.dev/posts/202212280458/</link>
    <pubDate>Wed, 28 Dec 2022 04:58:02 &#43;0900</pubDate>
    <author>inchan</author>
    <guid>https://inchan.dev/posts/202212280458/</guid>
    <description><![CDATA[AWS EC2에서 백엔드 서버와 프론트엔드 서버를 돌리는 와중, 백엔드 서버의 PM2 리스트 전체가 다운이 되면서 멈추는 일이 발생했다.
이래저래 복구를 하다가, 프리티어 t2의 메모리 부족 현상때문이라는 결론에 다달았고
ec2를 재부팅하였다.
AWS 퍼블릭 IP 주소가 바뀌었다? EC2 재부팅 결과, 서버의 퍼블릭 IPv4 주소가 바뀌는 일이 발생했다.
왜 그런가 찾아보니 AWS 기술문서에 다음과 같은 안내가 있었다.
퍼블릭 IP 주소1 다음과 같은 경우 인스턴스의 퍼블릭 IP 주소가 변경됩니다.
중지되었거나 최대 절전 모드로 전환된 인스턴스는 다시 시작될 때 새 퍼블릭 IP 주소를 받습니다.]]></description>
</item>
</channel>
</rss>
