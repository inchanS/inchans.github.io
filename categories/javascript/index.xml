<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>JavaScript - Category - cOdject</title>
        <link>/categories/javascript/</link>
        <description>JavaScript - Category - cOdject</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>codject@icloud.com (cOdject)</managingEditor>
            <webMaster>codject@icloud.com (cOdject)</webMaster><lastBuildDate>Sat, 28 Jan 2023 04:23:52 &#43;0900</lastBuildDate><atom:link href="/categories/javascript/" rel="self" type="application/rss+xml" /><item>
    <title>typescript - any와 unknown의 차이</title>
    <link>/posts/230128-typescript-any%EC%99%80-unknown%EC%9D%98-%EC%B0%A8%EC%9D%B4/</link>
    <pubDate>Sat, 28 Jan 2023 04:23:52 &#43;0900</pubDate>
    <author>cOdject</author>
    <guid>/posts/230128-typescript-any%EC%99%80-unknown%EC%9D%98-%EC%B0%A8%EC%9D%B4/</guid>
    <description><![CDATA[tag : #typescript related link
unknown-typescript typescript로 코딩을 하다가 어떤 타입인지 정의 내리기 힘든 상황에서 주로 any 를 사용한다.
물론 typescript의 성격상 any는 지양하는 것이 좋다.
오류를 검증하고 확인하려는 특성으로 엄격한 타입을 지정하려는 typescript에서 어떤 타입이나 가능하다는 성격의 any는 어쩌면 존재 자체가 모순인 타입이기도 하다.
하지만코딩을 하다보면 아직은 타입을 정하기 전인 상황이거나, 도저히 타입을 알 수 없거나 추론할 수 없을 때, (또는 typescript 초급자일 때 ;;) 가끔 사용하게 되는 것이 또 any 타입이다.]]></description>
</item>
<item>
    <title>typescript - satisfies operator 탐구</title>
    <link>/posts/230128-typescript-satisfies-operator/</link>
    <pubDate>Sat, 28 Jan 2023 04:22:36 &#43;0900</pubDate>
    <author>cOdject</author>
    <guid>/posts/230128-typescript-satisfies-operator/</guid>
    <description><![CDATA[tag : #typescript
related link
satisfies-operator / typescript typescript 4.9에서 새로 나온 기능으로 satisfies 라는 연산자가 있다.
공식문서를 정말 한참을 봤는데도 잘 이해가 가지 않았는데 직접 코드를 가지고 만져보니 조금 이해가 되었다.
satisfies 적용 전 Record라는 객체의 key, value를 지정해주는 연산자를 사용하여 객체의 타입을 지정할 때,
아래 코드를 보면 value의 타입으로 string | RGB2 라는 union type으로 인해 속성에 대한 오류가 잡힌다.
toUpperCase에서는 only string타입이 들어와야 하는데 union type으로 할당되어 생긴 에러로서 당연한 결과이다.]]></description>
</item>
<item>
    <title>JavaScript - basic 변수</title>
    <link>/posts/2022-09-12-javascript-basic-%EB%B3%80%EC%88%98/</link>
    <pubDate>Mon, 12 Sep 2022 05:23:04 &#43;0900</pubDate>
    <author>cOdject</author>
    <guid>/posts/2022-09-12-javascript-basic-%EB%B3%80%EC%88%98/</guid>
    <description><![CDATA[JavaScript - Basic 변수 변수는 2단계로 이루어진다.
변수의 선언 변수에 대한 값을 할당 let myNumber // myNumber라는 변수를 &#34;선언&#34; myNumber = 100 // 앞에서 선언한 변수에 값을 &#34;할당&#34; 용어 정리 - 변수 : 데이터를 담을 수 있는 대상 - 변수의 선언과 변수에 대한 값을 할당하는 것은 별개이다.
일반적으로 변수의 선언과 할당이 동시에 이루어진다. (아래 코드 참조)
let myNumber = 100 변수를 선언하는 명령어 var, let, const 각각의 차이는?? 종류 선언 재선언 재할당 var O O O let O X O const O X X 위 표와 같이 즉, let이나 const는 이미 선언했던 변수를 다시 선언할 수 없다.]]></description>
</item>
</channel>
</rss>
